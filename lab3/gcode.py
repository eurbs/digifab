import math
"""
Emilee Urbanek and Nick Confrey
CMSC 22010: Digital Fabrication
Lab 3
Due: 4/25

---

The GCode file
This is supposed to generate GCode given perimeters......
I'm not even sure if it's going to be a class or not....
Handles layers and stuff and also setup and cleanup
"""

# ==============================================================================
# =============================== GCODE HELPERS ================================
# ==============================================================================

extruded = 0.0

def updateExtruded(increment):
  global extruded
  extruded += increment

def calculateExtrudeAmount(x1, y1, x2, y2, thickness):
  """Calculates the extrude amount moving from (x1, y1) to (x2, y2)"""
  dist = math.sqrt(math.pow(x2-x1, 2) + math.pow(x2-x1, 2))
  return thickness * dist



# ==============================================================================
# ========================= GCODE GENERATION FUNCTIONS =========================
# ==============================================================================

def generateSetup(gfile, params):
  """Generates the setup GCode preceeding all of the printing

  Keyword arguments:
  gfile -- A file already open for writing the gcode to
  params -- a Parameters class filled with the parameters specified by user
  """
  gfile.write("; Generated by Nick&Em's Slycer at 'I'm too lazy to import datetime'C\n")
  gfile.write("\n")

  gfile.write("; Perimeter Layers: {}\n".format(params.perimeterLayers))
  gfile.write("; Infill: {}%%\n".format(params.infill * 100))
  gfile.write("; Layer Height: {}mm\n".format(params.layerHeight))
  gfile.write("; Nozzle Size: {}mm\n".format(params.thickness))
  gfile.write("; Support {}\n".format("On" if params.support else "Off"))
  gfile.write("; Temperature {} degrees C\n".format(params.temperature))
  gfile.write("\n")

  gfile.write("; SETUP\n")
  lines = [
    "M107 ; fan off",
    "M104 S{d} ; set temperature".format(params.temperature),
    "G28 X0 Y0 Z0 ; home all axes",
    "G1 Z5 F5000 ; lift nozzle",
    "",
    "M109 S{d} ; wait for temperature to be reached".format(params.temperature),
    "G21 ; set units to millimeters",
    "G90 ; use absolute coordinates",
    "M82 ; use absolute distances for extrusion",
    "G1 Z{:1.3f} F2400 ; put printhead at good distance from bed".format(params.thickness),
    "G92 E0",
    "G29 ; idk but cura does this to touch the corners",
    # right here, we want to find an appropriate place to set the 0 for x and y
    # we want to move there (G1) and then set it as 0 (G92 X0 Y0 Z0)
    ""
  ]
  gfile.write("\n".join(lines))


def generateGCode(gfile, params, layerZ, perimeters):
  """Generates the setup GCode preceeding all of the printing

  Keyword arguments:
  gfile -- A file already open for writing the gcode to
  params -- a Parameters class filled with the parameters specified by user
  layerZ -- The Z height of the current layer (relative to origin)
  perimeters -- A list of lists of points represeting perimeters passed in by slicer.py 
  """

  gfile.write("; LAYER Z={:3.3f}\n".format())
  lines = []
  
  lines.append("")
  gfile.write("\n".join(lines))

def generateCleanup(gfile):
  lines = [
    "; CLEANUP",
    "M104 S0 ; turn off heat",
    "G91 ; relative positioning",
    "G1 E-1 F300 ; retract the filament before lifting nozzle",
    "G1 Z+0.5 E-3 X-20 Y-20 F4200 ;move Z up a bit and retract filament more",
    "G28 X0 Y0 ; move X/Y to min endstops, moving head out of the way",
    "M84 ; disable motors",
    "G90 ; absolute positioning",
    ""
  ]
  gfile.write("\n".join(lines))
